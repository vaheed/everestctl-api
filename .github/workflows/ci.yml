name: CI

on:
  push:
    branches: ["**"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        if: ${{ secrets.REGISTRY && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build image
        run: |
          IMAGE_NAME=${{ secrets.IMAGE_NAME || 'everestctl-api' }}
          TAG=${{ github.sha }}
          docker build -t "$IMAGE_NAME:$TAG" .

      - name: Tag with registry
        if: ${{ secrets.REGISTRY && secrets.IMAGE_NAME }}
        run: |
          TAG=${{ github.sha }}
          docker tag "${{ secrets.IMAGE_NAME }}:$TAG" "${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:$TAG"

      - name: Push image
        if: ${{ secrets.REGISTRY && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD && secrets.IMAGE_NAME }}
        run: |
          docker push "${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}"

      - name: Deploy (placeholder)
        if: ${{ secrets.KUBECONFIG_B64 && secrets.REGISTRY && secrets.IMAGE_NAME }}
        run: |
          echo "TODO: add kubectl apply -f manifests here."
          echo "Image: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}"

      - name: Skipped deploy notice
        if: ${{ !(secrets.REGISTRY && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD && secrets.IMAGE_NAME) }}
        run: echo "Deploy skipped: missing REGISTRY/REGISTRY_USERNAME/REGISTRY_PASSWORD/IMAGE_NAME secrets."

