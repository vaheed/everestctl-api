# Everestctl API â€” .env example
# Copy this file to ".env" and adjust values to your environment.
# docker-compose will automatically read ".env" in the project root.

# =====================
# Required (runtime)
# =====================
# Secret used for protected endpoints. Change in production.
ADMIN_API_KEY=changeme

# API port inside the container (host port is mapped in docker-compose.yml)
PORT=8080

# Path to kubeconfig inside the container. The host kubeconfig is mounted here.
KUBECONFIG=/root/.kube/config

# =====================
# Optional (runtime)
# =====================
# Default password for newly created accounts when not provided in the request.
# If left empty, the API generates a strong password and returns it in the job
# result under "credentials".
BOOTSTRAP_DEFAULT_PASSWORD=

# Default operators to enable when the request does not specify any.
# Comma-separated among: mongodb, postgresql, mysql (or xtradb_cluster).
# If unset, the API enables 'postgresql' by default to satisfy everestctl
# requirement of selecting at least one operator during namespace creation.
BOOTSTRAP_DEFAULT_OPERATORS=postgresql

# RBAC apply command template. If set, the API generates a policy.csv for the
# user/namespace and executes this command. Use {file} as a placeholder that
# will be replaced with the temp file path.
# Examples:
#   EVEREST_RBAC_APPLY_CMD=everestctl access-control import --file {file}
#   EVEREST_RBAC_APPLY_CMD=kubectl -n everest-system create configmap everest-rbac \
#     --from-file=policy.csv={file} --dry-run=client -o yaml | kubectl apply -f -
EVEREST_RBAC_APPLY_CMD=

# Comma-separated CRDs to enforce a maximum number of database clusters per
# namespace using ResourceQuota count/<resource>. Adjust to your cluster CRDs.
# Example values (verify with: kubectl get crd | grep -i percona):
#   perconaservermongodbs.psmdb.percona.com
#   perconapgclusters.pgv2.percona.com
#   perconaxtradbclusters.pxc.percona.com
EVEREST_DB_COUNT_RESOURCES=

# =====================
# Host convenience (not used by the container)
# =====================
# Useful for CLI examples to target your local API.
BASE_URL=http://localhost:8080

# If your shell does not export HOME, set it here so docker-compose can expand
# the kubeconfig mount path (volumes use ${HOME}/.kube/config).
# HOME=/home/ubuntu

# =====================
# Build-time args (used only for docker build, not runtime)
# =====================
# Pin versions for reproducible images. Pass with:
#   docker build --build-arg KUBECTL_VERSION=v1.30.5 --build-arg EVERESTCTL_VERSION=vX.Y.Z -t everestctl-api .
#KUBECTL_VERSION=v1.30.5
#EVERESTCTL_VERSION=vX.Y.Z

# =====================
# Security notes
# =====================
# - Do NOT use ADMIN_API_KEY=changeme in production.
# - Treat this file as sensitive if you fill in real secrets.
